{"version":3,"sources":["functions/TodoItem.js","functions/TodosList.js","functions/Header.js","functions/InputTodo.js","functions/TodoContainer.js","index.js"],"names":["TodoItem","props","useState","editing","setEditing","todo","handleChangeProps","deleteTodoProps","setUpdate","completed","id","title","viewMode","editMode","display","className","onDoubleClick","style","type","checked","onChange","onClick","value","e","target","onKeyDown","event","key","TodosList","todos","map","Header","InputTodo","inputText","setInputText","onSubmit","preventDefault","trim","addTodoProps","placeholder","name","TodoContainer","delTodo","state","setState","filter","addTodoItem","newTodo","uuidv4","handleChange","prevState","updatedTitle","todoCopy","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebe6f003.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TodoItem(props) {\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const handleEditing = () => {\r\n    setEditing(true);\r\n  };\r\n\r\n  const handleUpdatedDone = (event) => {\r\n    if (event.key === 'Enter') {\r\n      setEditing(false);\r\n    }\r\n  };\r\n\r\n  const {\r\n    todo,\r\n    handleChangeProps,\r\n    deleteTodoProps,\r\n    setUpdate,\r\n  } = props;\r\n  const { completed, id, title } = todo;\r\n\r\n  const viewMode = {};\r\n  const editMode = {};\r\n\r\n  if (editing) {\r\n    viewMode.display = 'none';\r\n  } else {\r\n    editMode.display = 'none';\r\n  }\r\n\r\n  return (\r\n    <li className=\"item\">\r\n      <div onDoubleClick={handleEditing} style={viewMode}>\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"checkbox\"\r\n          checked={completed}\r\n          onChange={() => handleChangeProps(id)}\r\n        />\r\n        <button onClick={() => deleteTodoProps(id)} type=\"button\">Delete</button>\r\n        <span className={completed ? 'completedStyle' : null}>{title}</span>\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        className=\"input-text\"\r\n        style={editMode}\r\n        value={title}\r\n        onChange={(e) => {\r\n          setUpdate(e.target.value, id);\r\n        }}\r\n        onKeyDown={handleUpdatedDone}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.instanceOf(Object).isRequired,\r\n  handleChangeProps: PropTypes.func.isRequired,\r\n  deleteTodoProps: PropTypes.func.isRequired,\r\n  setUpdate: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TodoItem from './TodoItem';\r\n\r\nconst TodosList = (props) => {\r\n  const {\r\n    todos,\r\n    handleChangeProps,\r\n    deleteTodoProps,\r\n    setUpdate,\r\n  } = props;\r\n\r\n  return (\r\n    <ul>\r\n      {todos.map((todo) => (\r\n        <TodoItem\r\n          key={todo.id}\r\n          todo={todo}\r\n          handleChangeProps={handleChangeProps}\r\n          deleteTodoProps={deleteTodoProps}\r\n          setUpdate={setUpdate}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nTodosList.propTypes = {\r\n  todos: PropTypes.instanceOf(Array).isRequired,\r\n  handleChangeProps: PropTypes.func.isRequired,\r\n  deleteTodoProps: PropTypes.func.isRequired,\r\n  setUpdate: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TodosList;\r\n","import React from 'react';\r\n\r\nconst Header = () => (\r\n  <header>\r\n    <h1 className=\"heading\">todos</h1>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst InputTodo = (props) => {\r\n  const [inputText, setInputText] = useState({\r\n    title: '',\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    setInputText({\r\n      ...inputText,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputText.title.trim()) {\r\n      props.addTodoProps(inputText.title);\r\n      setInputText({\r\n        title: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form-container\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Add Todo...\"\r\n        className=\"input-text\"\r\n        value={inputText.title}\r\n        name=\"title\"\r\n        onChange={onChange}\r\n      />\r\n      <button className=\"input-submit\" type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nInputTodo.propTypes = {\r\n  addTodoProps: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default InputTodo;\r\n","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport TodosList from './TodosList';\r\nimport Header from './Header';\r\nimport InputTodo from './InputTodo';\r\n\r\nclass TodoContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todos: [\r\n        {\r\n          id: uuidv4(),\r\n          title: 'Setup development environment',\r\n          completed: true,\r\n        },\r\n        {\r\n          id: uuidv4(),\r\n          title: 'Develop website and add content',\r\n          completed: false,\r\n        },\r\n        {\r\n          id: uuidv4(),\r\n          title: 'Deploy to live server',\r\n          completed: false,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  delTodo = (id) => {\r\n    const { todos } = this.state;\r\n    this.setState({\r\n      todos: [...todos.filter((todo) => todo.id !== id)],\r\n    });\r\n  };\r\n\r\n  addTodoItem = (title) => {\r\n    const { todos } = this.state;\r\n    const newTodo = {\r\n      id: uuidv4(),\r\n      title,\r\n      completed: false,\r\n    };\r\n    this.setState({\r\n      todos: [...todos, newTodo],\r\n    });\r\n  };\r\n\r\n  handleChange = (id) => {\r\n    this.setState((prevState) => ({\r\n      todos: prevState.todos.map((todo) => {\r\n        if (todo.id === id) {\r\n          return {\r\n            ...todo,\r\n            completed: !todo.completed,\r\n          };\r\n        }\r\n        return todo;\r\n      }),\r\n    }));\r\n  };\r\n\r\n  setUpdate = (updatedTitle, id) => {\r\n    const { todos } = this.state;\r\n    this.setState({\r\n      todos: todos.map((todo) => {\r\n        const todoCopy = { ...todo };\r\n        if (todo.id === id) {\r\n          todoCopy.title = updatedTitle;\r\n        }\r\n        return todoCopy;\r\n      }),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { todos } = this.state;\r\n    const {\r\n      addTodoItem,\r\n      delTodo,\r\n      handleChange,\r\n      setUpdate,\r\n    } = this;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"inner\">\r\n          <Header />\r\n          <InputTodo addTodoProps={addTodoItem} />\r\n          <TodosList\r\n            todos={todos}\r\n            handleChangeProps={handleChange}\r\n            deleteTodoProps={delTodo}\r\n            setUpdate={setUpdate}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TodoContainer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoContainer from './functions/TodoContainer';\nimport './style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoContainer />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}